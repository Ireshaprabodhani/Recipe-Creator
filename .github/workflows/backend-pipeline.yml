name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'image_to_recipe/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and push
      working-directory: ./image_to_recipe
      run: |
        docker build -t recipe-backend .
        docker tag recipe-backend:latest 003891656478.dkr.ecr.ap-south-1.amazonaws.com/recipe-backend:latest
        docker push 003891656478.dkr.ecr.ap-south-1.amazonaws.com/recipe-backend:latest
    
    - name: Create/Update App Runner service
      run: |
        aws apprunner update-service --cli-input-json '{
          "ServiceArn": "${{ secrets.APPRUNNER_SERVICE_ARN }}",
          "SourceConfiguration": {
            "AuthenticationConfiguration": {
              "AccessRoleArn": "arn:aws:iam::003891656478:role/AppRunnerECRAccessRole"
            },
            "ImageRepository": {
              "ImageIdentifier": "003891656478.dkr.ecr.ap-south-1.amazonaws.com/recipe-backend:latest",
              "ImageRepositoryType": "ECR",
              "ImageConfiguration": {
                "Port": "5000",
                "StartCommand": "gunicorn --bind 0.0.0.0:5000 app:app",
                "RuntimeEnvironmentVariables": {
                  "OPENAI_API_KEY": "${{ secrets.OPENAI_API_KEY }}",
                  "PORT": "5000"
                }
              }
            }
          }
        }'