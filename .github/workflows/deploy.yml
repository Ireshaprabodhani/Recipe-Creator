name: Deploy Recipe Creator

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    # Frontend Setup and Deploy
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Install and Build Frontend
      run: |
        cd frontend
        npm install
        npm run build
        aws s3 sync dist s3://recipe-creator-frontend --delete

    # Backend Deploy
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Deploy Backend
      run: |
        cd image_to_recipe
        pip install --target ./package -r requirements.txt
        cd package
        zip -r ../lambda_function.zip .
        cd ..
        zip -g lambda_function.zip app.py
        aws lambda update-function-code \
          --function-name recipe-creator-function \
          --zip-file fileb://lambda_function.zip

    - name: Create/Update API Gateway
      run: |
        # Get existing API ID or create new one
        API_ID=$(aws apigateway get-rest-apis --query 'items[?name==`recipe-creator-api`].id' --output text)
        
        if [ -z "$API_ID" ]; then
          # Create new API if it doesn't exist
          API_ID=$(aws apigateway create-rest-api \
            --name recipe-creator-api \
            --description "API for Recipe Creator" \
            --query 'id' --output text)
            
          # Get root resource ID
          ROOT_ID=$(aws apigateway get-resources \
            --rest-api-id $API_ID \
            --query 'items[?path==`/`].id' --output text)
            
          # Create API resources and methods
          RESOURCE_ID=$(aws apigateway create-resource \
            --rest-api-id $API_ID \
            --parent-id $ROOT_ID \
            --path-part "api" \
            --query 'id' --output text)
            
          # Setup CORS
          aws apigateway put-method \
            --rest-api-id $API_ID \
            --resource-id $RESOURCE_ID \
            --http-method OPTIONS \
            --authorization-type NONE
        fi
        
        # Deploy API
        aws apigateway create-deployment \
          --rest-api-id $API_ID \
          --stage-name prod